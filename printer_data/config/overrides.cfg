############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

# ------------------------------------------------------------------------------------------


#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
[gcode_macro _USER_VARIABLES]
variable_startprint_actions: "bed_soak", "chamber_soak", "extruder_preheating", "tilt_calib", "bedmesh", "extruder_heating", "custom1", "primeline"
gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[heater_bed]
control: pid
pid_version: 1
pid_target: 100.00
pid_tolerance: 0.0200
control: pid
pid_kp: 44.599
pid_ki: 0.891
pid_kd: 557.858
sensor_type: ATC Semitec 104NT-4-R025H42G
pullup_resistor: 2200


#-------------------------#
#   Probe Offsets         #
#-------------------------#

[include motors.cfg]

[printer]
max_velocity: 1000
max_accel: 50000
minimum_cruise_ratio: 0
square_corner_velocity: 15


[extruder]
sensor_type: MAX31865


[input_shaper]
shaper_freq_x: 82.8  # frequency for the X mark of the test model
shaper_freq_y: 85.4  # frequency for the Y mark of the test model
shaper_type_x: mzv
shaper_type_y: ei
damping_ratio_x: 0.0335 # damping ratio for the X axis
damping_ratio_y: 0.0687 # damping ratio for the Y axis

# bev2
enabled_extruders: extruder


[gcode_macro _USER_VARIABLES]
variable_sensorless_homing_enabled: True
gcode:


[stepper_x]
homing_speed: 160
endstop_pin: tmc5160_stepper_x:virtual_endstop

[tmc5160 stepper_x]
diag1_pin: ^!X_STOP

[stepper_y]
homing_speed: 40

[controller_fan controller_fan]
tachometer_pin: PC5

[temperature_sensor Chamber]
sensor_type: ATC Semitec 104NT-4-R025H42G
pullup_resistor: 2200

[danger_options]
allow_plugin_override: True

[change_nozzle]

[include plugins.cfg]
[include kalico.cfg]


# bed adxl override
# [include override_config/hardware/accelerometers/PIS.cfg]

[include macros/calibration/test_speed.cfg]
[include override_config/hardware/extruder/lowboi_mk4.cfg]
[include override_config/software/leveling/screws_tilt_adjust_200mm.cfg]



[gcode_macro _WAIT_CHAMBER_TEMP]
# This macro is needed to allow klipper populate a new value in the printer[...].temperature variable
# as each variables are populated only once at the beginning of every macro call
gcode:
    {% set chamber_sensor_enabled = printer["gcode_macro _USER_VARIABLES"].chamber_temperature_sensor_enabled %}

    {% if chamber_sensor_enabled %}
        {% set chamber_sensor_name = printer["gcode_macro _USER_VARIABLES"].chamber_temperature_sensor_name %}
        {% set SETPOINT_TEMP = params.TEMP|default(0)|float %}
        {% set CURRENT_TEMP = printer["temperature_sensor " ~ chamber_sensor_name].temperature|float %}

        {% if CURRENT_TEMP <= SETPOINT_TEMP %}
            RESPOND MSG="Heating up the chamber : {CURRENT_TEMP}/{SETPOINT_TEMP}"
            # G4 P{60000 * 1} # wait a minute and check again if called in a loop
            
            
            M106 S204

            # Instead of waiting a minute using dwell, shake bed for a minute
            {% set move_distance = 50|int %}
            {% set move_speed = 100|int %}

            # Small pattern at center
            # Find Y center point
            {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
            
            # Set small pattern box around center point
            {% set y_center_min = y_center - (move_distance/2) %}
            {% set y_center_max = y_center + (move_distance/2) %}

            # Approximate calculation of how many iterations can be do in 1 minute
            {% set move_iterations =  (60 / ((move_distance * 2) / move_speed))|int|round(0)|int %}
            
            {% for i in range(move_iterations) %}
                G0 Y{y_center_min} F{move_speed * 60}
                G0 Y{y_center_max} F{move_speed * 60}
            {% endfor %} 

            M107
        {% endif %}
    {% endif %}