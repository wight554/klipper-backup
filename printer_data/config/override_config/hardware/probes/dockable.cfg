[gcode_macro _USER_VARIABLES]
# variable_probe_type_enabled: "dockable"
variable_startprint_actions: "bed_soak", "extruder_preheating", "chamber_soak", "tilt_calib", "extruder_heating", "purge", "clean", "z_offset", "bedmesh", "primeline"
gcode:

# Dockable probe definition also include the probe management and overrides directly from here
[include ../../../macros/base/probing/generic_probe.cfg]

[dockable_probe]
pin: ^toolhead:PROBE_INPUT
x_offset: 0 # negative = left of the nozzle
y_offset: 40.105
check_open_attach: True
z_offset: 3.130
speed: 8
lift_speed: 15
samples: 4
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

# dockable
attach_speed: 100
detach_speed: 100
travel_speed: 100
approach_position: 212, 0, 20
dock_position: 234, 0
detach_position: 212, 0, 1
z_hop: 10.0
drop_first_result: True


[stepper_z]
endstop_pin: probe:z_virtual_endstop


# [gcode_macro _USER_VARIABLES]
# variable_zcalib_plugin_enabled: True
# gcode:

# Automatically include the associated CALIBRATE_Z overide
# [include macros/base/homing/z_calibration.cfg]


# [z_calibration]
# # Physical Z endstop pin position
# nozzle_xy_position: 202,236
# # Probe switch position on physical endstop
# switch_xy_position: 195,204
# # Switch offset (default D2F-5: 0.5mm and SSG-5H: 0.7mm)
# # Smaller number means higher nozzle to the PEI
# switch_offset: 0.325
# offset_margins: -0.750, 1.0
# samples: 4
# samples_tolerance: 0.01
# speed: 350 # X,Y movements
# probing_first_fast: True
# safe_z_height: 12.5
# lift_speed: 15


[homing_override]
axes: xyz
set_position_z: 0
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set kinematics = printer["configfile"].config["printer"]["kinematics"] %}
    {% set probe_type_enabled = printer["gcode_macro _USER_VARIABLES"].probe_type_enabled %}
    {% set homing_zhop = printer["gcode_macro _USER_VARIABLES"].homing_zhop|float|abs %}
    {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed * 60 %}
    {% set homing_travel_accel = printer["gcode_macro _USER_VARIABLES"].homing_travel_accel %}
    {% set sensorless_homing_enabled = printer["gcode_macro _USER_VARIABLES"].sensorless_homing_enabled %}
    {% set sensorless_current_factor = printer["gcode_macro _USER_VARIABLES"].sensorless_current_factor / 100 %}
    {% set x_driver = printer["gcode_macro _USER_VARIABLES"].x_driver %}
    {% set y_driver = printer["gcode_macro _USER_VARIABLES"].y_driver %}
    {% set z_driver = printer["gcode_macro _USER_VARIABLES"].z_driver %}
    {% set z_drop_speed = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
    {% set status_leds_enabled = printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
    {% set bed_mesh_enabled = printer["gcode_macro _USER_VARIABLES"].bed_mesh_enabled %}

    {% set homing_first = printer["gcode_macro _USER_VARIABLES"].homing_first|string|upper %}
    {% set x_homing_backoff, y_homing_backoff = printer["gcode_macro _USER_VARIABLES"].homing_backoff_distance_xy|map('float') %}

    {% set x_position_endstop = printer["configfile"].config["stepper_x"]["position_endstop"]|float %}
    {% set y_position_endstop = printer["configfile"].config["stepper_y"]["position_endstop"]|float %}
    {% set x_position_center = printer.toolhead.axis_maximum.x|int/2 - printer.toolhead.axis_minimum.x|int/2 %}
    {% set y_position_center = printer.toolhead.axis_maximum.y|int/2 - printer.toolhead.axis_minimum.y|int/2 %}


    {% if probe_type_enabled == "dockable" or probe_type_enabled == "dockable_virtual" %}
        _CHECK_PROBE action=query
    {% endif %}

    # reset parameters
    {% set X, Y, Z = False, False, False %}

    {% if status_leds_enabled %}
        STATUS_LEDS COLOR="HOMING"
    {% endif %}

    # which axes have been requested for homing
    {% if not 'X' in params
        and not 'Y' in params
        and not 'Z' in params %}

        {% set X, Y, Z = True, True, True %}

    {% else %}
        {% if 'X' in params %}
            {% set X = True %}
        {% endif %}

        {% if 'Y' in params %}
            {% set Y = True %}
        {% endif %}

        {% if 'Z' in params %}
            {% set Z = True %}
        {% endif %}

        {% if 'X' in params
          and 'Y' in params
          and 'Z' in params %}
            # reset homing state variables
            # if homing all axes
            _HOMING_VARIABLES reset=1
         {% endif %}

    {% endif %}

    {% if probe_type_enabled == "dockable" or probe_type_enabled == "dockable_virtual" %}
       _ENTRY_POINT FUNCTION=homing_override
    {% endif %}

    # Set the homing acceleration prior to any movement
    {% set saved_accel = printer.toolhead.max_accel %}
    M204 S{homing_travel_accel}

    {% if bed_mesh_enabled %}
        BED_MESH_CLEAR
    {% endif %}

    G90

    {% if Z %}
        {% if ('z' in printer.toolhead.homed_axes) %}
            {% if (printer.toolhead.position.z < homing_zhop) %}
                {% if verbose %}
                    { action_respond_info("Z too low, performing ZHOP to rehome Z") }
                {% endif %}
                G91
                G0 Z{homing_zhop} F{z_drop_speed}
                G90
            {% else %}
                {% if verbose %}
                    { action_respond_info("Z already safe, no ZHOP needed to rehome Z") }
                {% endif %}
            {% endif %}
        {% elif ('xy' in printer.toolhead.homed_axes) %}
            {% if verbose %}
                { action_respond_info("X and Y already homed, no ZHOP needed to home Z") }
            {% endif %}
        {% else %}
            {% if verbose %}
                { action_respond_info("X and Y not homed, forcing full G28 to home Z properly") }
            {% endif %}
            SET_KINEMATIC_POSITION X=0 Y=0 Z=0
            G0 Z{homing_zhop} F{z_drop_speed}
            {% if sensorless_homing_enabled and kinematics == "corexz" %}
                # Wait for stallguard registers to clear
                M400
            {% endif %}
            {% set X, Y, Z = True, True, True %}
        {% endif %}
    {% endif %}

    {% if homing_first == "X" %}
        {% if X %} # Home x
            {% if verbose %}
                { action_respond_info("Homing X") }
            {% endif %}
            G28 X0
            G1 X{x_position_endstop + x_homing_backoff} F{homing_travel_speed}
        {% endif %}
        {% if Y %} # Home y
            {% if verbose %}
                { action_respond_info("Homing Y") }
            {% endif %}
            G28 Y0
            G1 Y{y_position_endstop + y_homing_backoff} F{homing_travel_speed}
        {% endif %}

    {% elif homing_first == "Y" %}
        {% if Y %} # Home y
            {% if verbose %}
                { action_respond_info("Homing Y") }
            {% endif %}
            G28 Y0
            G1 Y{y_position_endstop + y_homing_backoff} F{homing_travel_speed}
        {% endif %}
        {% if X %} # Home x
            {% if verbose %}
                { action_respond_info("Homing X") }
            {% endif %}
            G28 X0
            G1 X{x_position_endstop + x_homing_backoff} F{homing_travel_speed}
        {% endif %}

    {% else %}
        { action_respond_error("Axis homing order not valid. Choose either X or Y first in the variables.cfg file!") }
    {% endif %}


    # Home z
    {% if Z %}
        {% if verbose %}
            { action_respond_info("Homing Z") }
        {% endif %}

        ATTACH_PROBE

        MOVE_AVOIDING_DOCK X=102 Y=60 SPEED=300

        G28 Z
    {% endif %}


    # Reset acceleration values to what it was before
    SET_VELOCITY_LIMIT ACCEL={saved_accel}

    {% if probe_type_enabled == "dockable" or probe_type_enabled == "dockable_virtual" %}
        _EXIT_POINT FUNCTION=homing_override
    {% endif %}

    {% if status_leds_enabled %}
        STATUS_LEDS COLOR="READY"
    {% endif %}
